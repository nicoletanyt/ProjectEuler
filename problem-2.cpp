/*
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

#include <iostream>
#include <vector>
using namespace std;

int main() {
  int maxNum = 4000000; 
  vector<int> fibonacciSequence = {1, 2};
  int evenTotal = 2;
  int newNum = 0;

  while ((fibonacciSequence[fibonacciSequence.size() - 1]) < maxNum) {
    newNum += fibonacciSequence[fibonacciSequence.size() - 1];
    newNum += fibonacciSequence[fibonacciSequence.size() - 2];
    if (newNum < maxNum) {
      fibonacciSequence.push_back(newNum);
      if (newNum % 2 == 0) {
        evenTotal += newNum;
      }
    } else {
      break;
    }
    newNum = 0;
  }

  cout << evenTotal;

  return 0;
}
